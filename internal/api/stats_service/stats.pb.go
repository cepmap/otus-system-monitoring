// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: stats.proto

package stats_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatType int32

const (
	StatType_LOAD_AVERAGE StatType = 0
	StatType_CPU_STATS    StatType = 1
	StatType_DISK_LOAD    StatType = 2
	StatType_DISK_USAGE   StatType = 3
)

// Enum value maps for StatType.
var (
	StatType_name = map[int32]string{
		0: "LOAD_AVERAGE",
		1: "CPU_STATS",
		2: "DISK_LOAD",
		3: "DISK_USAGE",
	}
	StatType_value = map[string]int32{
		"LOAD_AVERAGE": 0,
		"CPU_STATS":    1,
		"DISK_LOAD":    2,
		"DISK_USAGE":   3,
	}
)

func (x StatType) Enum() *StatType {
	p := new(StatType)
	*p = x
	return p
}

func (x StatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatType) Descriptor() protoreflect.EnumDescriptor {
	return file_stats_proto_enumTypes[0].Descriptor()
}

func (StatType) Type() protoreflect.EnumType {
	return &file_stats_proto_enumTypes[0]
}

func (x StatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatType.Descriptor instead.
func (StatType) EnumDescriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{0}
}

type StatsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IntervalN        int32                  `protobuf:"varint,1,opt,name=interval_n,json=intervalN,proto3" json:"interval_n,omitempty"`
	AveragingPeriodM int32                  `protobuf:"varint,2,opt,name=averaging_period_m,json=averagingPeriodM,proto3" json:"averaging_period_m,omitempty"`
	StatTypes        []StatType             `protobuf:"varint,3,rep,packed,name=stat_types,json=statTypes,proto3,enum=stats_service.StatType" json:"stat_types,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StatsRequest) Reset() {
	*x = StatsRequest{}
	mi := &file_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsRequest) ProtoMessage() {}

func (x *StatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsRequest.ProtoReflect.Descriptor instead.
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{0}
}

func (x *StatsRequest) GetIntervalN() int32 {
	if x != nil {
		return x.IntervalN
	}
	return 0
}

func (x *StatsRequest) GetAveragingPeriodM() int32 {
	if x != nil {
		return x.AveragingPeriodM
	}
	return 0
}

func (x *StatsRequest) GetStatTypes() []StatType {
	if x != nil {
		return x.StatTypes
	}
	return nil
}

type StatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	LoadAverage   *LoadAverage           `protobuf:"bytes,2,opt,name=load_average,json=loadAverage,proto3" json:"load_average,omitempty"`
	CpuStats      *CPUStat               `protobuf:"bytes,3,opt,name=cpu_stats,json=cpuStats,proto3" json:"cpu_stats,omitempty"`
	DiskLoad      *DiskLoad              `protobuf:"bytes,4,opt,name=disk_load,json=diskLoad,proto3" json:"disk_load,omitempty"`
	DiskStats     *DiskStats             `protobuf:"bytes,5,opt,name=disk_stats,json=diskStats,proto3" json:"disk_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_stats_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{1}
}

func (x *StatsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StatsResponse) GetLoadAverage() *LoadAverage {
	if x != nil {
		return x.LoadAverage
	}
	return nil
}

func (x *StatsResponse) GetCpuStats() *CPUStat {
	if x != nil {
		return x.CpuStats
	}
	return nil
}

func (x *StatsResponse) GetDiskLoad() *DiskLoad {
	if x != nil {
		return x.DiskLoad
	}
	return nil
}

func (x *StatsResponse) GetDiskStats() *DiskStats {
	if x != nil {
		return x.DiskStats
	}
	return nil
}

type LoadAverage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Load1Min      float64                `protobuf:"fixed64,1,opt,name=load1min,proto3" json:"load1min,omitempty"`
	Load5Min      float64                `protobuf:"fixed64,2,opt,name=load5min,proto3" json:"load5min,omitempty"`
	Load15Min     float64                `protobuf:"fixed64,3,opt,name=load15min,proto3" json:"load15min,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadAverage) Reset() {
	*x = LoadAverage{}
	mi := &file_stats_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAverage) ProtoMessage() {}

func (x *LoadAverage) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAverage.ProtoReflect.Descriptor instead.
func (*LoadAverage) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{2}
}

func (x *LoadAverage) GetLoad1Min() float64 {
	if x != nil {
		return x.Load1Min
	}
	return 0
}

func (x *LoadAverage) GetLoad5Min() float64 {
	if x != nil {
		return x.Load5Min
	}
	return 0
}

func (x *LoadAverage) GetLoad15Min() float64 {
	if x != nil {
		return x.Load15Min
	}
	return 0
}

type CPUStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          float64                `protobuf:"fixed64,1,opt,name=user,proto3" json:"user,omitempty"`
	System        float64                `protobuf:"fixed64,2,opt,name=system,proto3" json:"system,omitempty"`
	Idle          float64                `protobuf:"fixed64,3,opt,name=idle,proto3" json:"idle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUStat) Reset() {
	*x = CPUStat{}
	mi := &file_stats_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUStat) ProtoMessage() {}

func (x *CPUStat) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUStat.ProtoReflect.Descriptor instead.
func (*CPUStat) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{3}
}

func (x *CPUStat) GetUser() float64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *CPUStat) GetSystem() float64 {
	if x != nil {
		return x.System
	}
	return 0
}

func (x *CPUStat) GetIdle() float64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

type DiskLoad struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tps           float64                `protobuf:"fixed64,1,opt,name=tps,proto3" json:"tps,omitempty"`
	Kps           float64                `protobuf:"fixed64,2,opt,name=kps,proto3" json:"kps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskLoad) Reset() {
	*x = DiskLoad{}
	mi := &file_stats_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskLoad) ProtoMessage() {}

func (x *DiskLoad) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskLoad.ProtoReflect.Descriptor instead.
func (*DiskLoad) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{4}
}

func (x *DiskLoad) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *DiskLoad) GetKps() float64 {
	if x != nil {
		return x.Kps
	}
	return 0
}

type DiskStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiskStats     []*DiskStat            `protobuf:"bytes,1,rep,name=disk_stats,json=diskStats,proto3" json:"disk_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskStats) Reset() {
	*x = DiskStats{}
	mi := &file_stats_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStats) ProtoMessage() {}

func (x *DiskStats) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStats.ProtoReflect.Descriptor instead.
func (*DiskStats) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{5}
}

func (x *DiskStats) GetDiskStats() []*DiskStat {
	if x != nil {
		return x.DiskStats
	}
	return nil
}

type DiskStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filesystem    string                 `protobuf:"bytes,1,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	Usage         *DiskUsage             `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	Inodes        *InodeUsage            `protobuf:"bytes,3,opt,name=inodes,proto3" json:"inodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskStat) Reset() {
	*x = DiskStat{}
	mi := &file_stats_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskStat) ProtoMessage() {}

func (x *DiskStat) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskStat.ProtoReflect.Descriptor instead.
func (*DiskStat) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{6}
}

func (x *DiskStat) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *DiskStat) GetUsage() *DiskUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *DiskStat) GetInodes() *InodeUsage {
	if x != nil {
		return x.Inodes
	}
	return nil
}

type DiskUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Used          uint64                 `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	Usage         string                 `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskUsage) Reset() {
	*x = DiskUsage{}
	mi := &file_stats_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskUsage) ProtoMessage() {}

func (x *DiskUsage) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskUsage.ProtoReflect.Descriptor instead.
func (*DiskUsage) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{7}
}

func (x *DiskUsage) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskUsage) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

type InodeUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Used          uint64                 `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	Usage         string                 `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InodeUsage) Reset() {
	*x = InodeUsage{}
	mi := &file_stats_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InodeUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InodeUsage) ProtoMessage() {}

func (x *InodeUsage) ProtoReflect() protoreflect.Message {
	mi := &file_stats_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InodeUsage.ProtoReflect.Descriptor instead.
func (*InodeUsage) Descriptor() ([]byte, []int) {
	return file_stats_proto_rawDescGZIP(), []int{8}
}

func (x *InodeUsage) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *InodeUsage) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

var File_stats_proto protoreflect.FileDescriptor

var file_stats_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4e, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x5f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4d, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x50, 0x55, 0x53, 0x74, 0x61, 0x74, 0x52, 0x08, 0x63, 0x70,
	0x75, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x63, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x6d, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x6d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x6d, 0x69, 0x6e, 0x22, 0x49, 0x0a, 0x07, 0x43, 0x50,
	0x55, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x69, 0x64, 0x6c, 0x65, 0x22, 0x2e, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x4c, 0x6f, 0x61,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x74, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6b, 0x70, 0x73, 0x22, 0x43, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x09, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x69, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x09, 0x44, 0x69,
	0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x36, 0x0a, 0x0a, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x4a, 0x0a, 0x08, 0x53, 0x74, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x41, 0x56,
	0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x50, 0x55, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x4c,
	0x4f, 0x41, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x55, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x03, 0x32, 0x59, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x42, 0x1f, 0x5a, 0x1d, 0x2e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x3b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_stats_proto_rawDescOnce sync.Once
	file_stats_proto_rawDescData []byte
)

func file_stats_proto_rawDescGZIP() []byte {
	file_stats_proto_rawDescOnce.Do(func() {
		file_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stats_proto_rawDesc), len(file_stats_proto_rawDesc)))
	})
	return file_stats_proto_rawDescData
}

var file_stats_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_stats_proto_goTypes = []any{
	(StatType)(0),         // 0: stats_service.StatType
	(*StatsRequest)(nil),  // 1: stats_service.StatsRequest
	(*StatsResponse)(nil), // 2: stats_service.StatsResponse
	(*LoadAverage)(nil),   // 3: stats_service.LoadAverage
	(*CPUStat)(nil),       // 4: stats_service.CPUStat
	(*DiskLoad)(nil),      // 5: stats_service.DiskLoad
	(*DiskStats)(nil),     // 6: stats_service.DiskStats
	(*DiskStat)(nil),      // 7: stats_service.DiskStat
	(*DiskUsage)(nil),     // 8: stats_service.DiskUsage
	(*InodeUsage)(nil),    // 9: stats_service.InodeUsage
}
var file_stats_proto_depIdxs = []int32{
	0, // 0: stats_service.StatsRequest.stat_types:type_name -> stats_service.StatType
	3, // 1: stats_service.StatsResponse.load_average:type_name -> stats_service.LoadAverage
	4, // 2: stats_service.StatsResponse.cpu_stats:type_name -> stats_service.CPUStat
	5, // 3: stats_service.StatsResponse.disk_load:type_name -> stats_service.DiskLoad
	6, // 4: stats_service.StatsResponse.disk_stats:type_name -> stats_service.DiskStats
	7, // 5: stats_service.DiskStats.disk_stats:type_name -> stats_service.DiskStat
	8, // 6: stats_service.DiskStat.usage:type_name -> stats_service.DiskUsage
	9, // 7: stats_service.DiskStat.inodes:type_name -> stats_service.InodeUsage
	1, // 8: stats_service.StatsService.GetStats:input_type -> stats_service.StatsRequest
	2, // 9: stats_service.StatsService.GetStats:output_type -> stats_service.StatsResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_stats_proto_init() }
func file_stats_proto_init() {
	if File_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stats_proto_rawDesc), len(file_stats_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stats_proto_goTypes,
		DependencyIndexes: file_stats_proto_depIdxs,
		EnumInfos:         file_stats_proto_enumTypes,
		MessageInfos:      file_stats_proto_msgTypes,
	}.Build()
	File_stats_proto = out.File
	file_stats_proto_goTypes = nil
	file_stats_proto_depIdxs = nil
}
